crypto.dummy_message_digests = false
crypto.message_digest        = SHA256
# plain, content, message, or content_and_message
crypto.digestion_strategy    = plain

crypto.clients.cert_algo    = HMAC_SHA256
crypto.clients.dummy_certs  = false
crypto.clients.pre_digest   = false
crypto.replies.cert_algo    = default
crypto.replies.dummy_certs  = false
crypto.replies.pre_digest   = false
crypto.replicas.strong.cert_algo     = TMAC_HMAC_SHA256
crypto.replicas.strong.dummy_certs   = false
crypto.replicas.strong.pre_digest    = false
crypto.replicas.standard.cert_algo   = default
crypto.replicas.standard.dummy_certs = false
crypto.replicas.standard.pre_digest  = false

# java, cash, dummy, trinx
crypto.replicas.trusted  = java
#crypto.trinx.library     =
#crypto.trinx.enclave     =

agreement.protocol    = hybsterx
agreement.replicas    = 3
agreement.quorum      = 2
agreement.weak_quorum = 2
agreement.commit_threshold     = 2
agreement.checkpoint_threshold = 2
agreement.passive_checkpoints  = true

#-- regular, nodeprogress (which equals regular), apply (without ensuring exactly once semantics), send (without applying), create (without sending)
agreement.checkpoint_mode      = send

# For replicas=4: 4, 3 (rotating), 2 (does not work when checkpoints are applied), woleader (leader does not send replies)
client.repliers              = 3
client.readonly_optimization = true
